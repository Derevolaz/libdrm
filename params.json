{"name":"Libdrm","tagline":"Mirror of git://anongit.freedesktop.org/mesa/drm","body":"libdrm - userspace library for drm\r\n\r\nThis  is libdrm,  a userspace  library for  accessing the  DRM, direct\r\nrendering  manager, on  Linux,  BSD and  other  operating systes  that\r\nsupport the  ioctl interface.  The library  provides wrapper functions\r\nfor the  ioctls to avoid  exposing the kernel interface  directly, and\r\nfor chipsets with drm memory manager, support for tracking relocations\r\nand  buffers.   libdrm  is  a  low-level library,  typically  used  by\r\ngraphics drivers  such as the Mesa  DRI drivers, the  X drivers, libva\r\nand  similar projects.  New  functionality in  the kernel  DRM drivers\r\ntypically requires  a new  libdrm, but a  new libdrm will  always work\r\nwith an older kernel.\r\n\r\n\r\nCompiling\r\n---------\r\n\r\nlibdrm  is  a  standard  autotools  packages and  follows  the  normal\r\nconfigure, build  and install steps.   The first step is  to configure\r\nthe package, which is done by running the configure shell script:\r\n\r\n\t./configure\r\n\r\nBy default, libdrm  will install into the /usr/local/  prefix.  If you\r\nwant  to  install   this  DRM  to  replace  your   system  copy,  pass\r\n--prefix=/usr and  --exec-prefix=/ to configure.  If  you are building\r\nlibdrm  from a  git checkout,  you first  need to  run  the autogen.sh\r\nscript.  You can  pass any options to autogen.sh  that you would other\r\nwise  pass to configure,  or you  can just  re-run configure  with the\r\noptions you need once autogen.sh finishes.\r\n\r\nNext step is to build libdrm:\r\n\r\n\tmake\r\n\r\nand once make finishes successfully, install the package using\r\n\r\n\tmake install\r\n\r\nIf you are install into a system location, you will need to be root to\r\nperform the install step.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}